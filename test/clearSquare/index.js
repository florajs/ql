var assert = require('assert'),
    fn = require('../../clearSquare')({
        operators: ['=', '!=', '<', '<=', '>', '>='],
        glue: '.',
        and: '*',
        or: '+',
        relate: '~',
        lookDelimiter: '+',
        roundBracket: ['(', ')'],
        squareBracket: ['[', ']']
    });

describe('clearSquare()', function() {
    var i, l, 
        terms = [
            // basic
            
            ['e0[e1]',                      '(e0_1)'],
            ['e0[e1[e2]]',                  '(e0_1_2)'],
            ['e1[e2*e3]',                   '(e1_2*e1_3)'],
            ['e1[e2+e3]',                   '(e1_2+e1_3)'],
            
            // AND and OR Connections
            
            ['e0*e1[e2]',                   'e0*(e1_2)'],
            ['e0[e1]*e2',                   '(e0_1)*e2'],
            ['e0[e1*e2*e3]',                '(e0_1*e0_2*e0_3)'],
            ['e0[e1*e2[e3]]',               '(e0_1*e0_2_3)'],
            ['e0[e1[e2]*e3]',               '(e0_1_2*e0_3)'],
            ['e0[e1*e2[e3*e4]]',            '(e0_1*e0_2_3*e0_2_4)'],
            ['e0[e1[e2*e3]*e4]',            '(e0_1_2*e0_1_3*e0_4)'],
            ['e0[e1*e2[e3*e4]*e5]',         '(e0_1*e0_2_3*e0_2_4*e0_5)'],
            ['e0[e1*e2[e3*e4]*e5]*e6',      '(e0_1*e0_2_3*e0_2_4*e0_5)*e6'],
            ['e0*e1[e2*e3[e4*e5]*e6]',      'e0*(e1_2*e1_3_4*e1_3_5*e1_6)'],
            ['e0*e1[e2*e3[e4*e5]*e6]*e7',   'e0*(e1_2*e1_3_4*e1_3_5*e1_6)*e7'],

            ['e0+e1[e2]',                   'e0+(e1_2)'],
            ['e0[e1]+e2',                   '(e0_1)+e2'],
            ['e0[e1+e2+e3]',                '(e0_1+e0_2+e0_3)'],
            ['e0[e1+e2[e3]]',               '(e0_1+e0_2_3)'],
            ['e0[e1[e2]+e3]',               '(e0_1_2+e0_3)'],
            ['e0[e1+e2[e3+e4]]',            '(e0_1+e0_2_3+e0_2_4)'],
            ['e0[e1[e2+e3]+e4]',            '(e0_1_2+e0_1_3+e0_4)'],
            ['e0[e1+e2[e3+e4]+e5]',         '(e0_1+e0_2_3+e0_2_4+e0_5)'],
            ['e0[e1+e2[e3+e4]+e5]+e6',      '(e0_1+e0_2_3+e0_2_4+e0_5)+e6'],
            ['e0+e1[e2+e3[e4+e5]+e6]',      'e0+(e1_2+e1_3_4+e1_3_5+e1_6)'],
            ['e0+e1[e2+e3[e4+e5]+e6]+e7',   'e0+(e1_2+e1_3_4+e1_3_5+e1_6)+e7'],

            // support for wild, round brackets

            ['e0[(e1+e2)*e3]',                                      '(e0_1*e0_3+' +
                                                                     'e0_2*e0_3)'],
            ['e0[e1*(e2+e3)]',                                      '(e0_1*e0_2+' +
                                                                     'e0_1*e0_3)'],
            ['e0[(e1+e2)*(e3+e4)]',                                 '(e0_1*e0_3+' +
                                                                     'e0_1*e0_4+' +
                                                                     'e0_2*e0_3+' +
                                                                     'e0_2*e0_4)'],
            ['e0[(e1[e2*e3]+e4)*(e5+e6)]',                          '(e0_1_2*e0_1_3*e0_5+' +
                                                                     'e0_1_2*e0_1_3*e0_6+' +
                                                                     'e0_4*e0_5+' +
                                                                     'e0_4*e0_6)'],
            ['e0[(e1+e2[e3*e4])*(e5+e6)]',                          '(e0_1*e0_5+' +
                                                                     'e0_1*e0_6+' +
                                                                     'e0_2_3*e0_2_4*e0_5+' +
                                                                     'e0_2_3*e0_2_4*e0_6)'],
            ['e0[(e1+e2)*(e3[e4*e5]+e6)]',                          '(e0_1*e0_3_4*e0_3_5+' +
                                                                     'e0_1*e0_6+' +
                                                                     'e0_2*e0_3_4*e0_3_5+' +
                                                                     'e0_2*e0_6)'],
            ['e0[(e1+e2)*(e3+e4[e5*e6])]',                          '(e0_1*e0_3+' +
                                                                     'e0_1*e0_4_5*e0_4_6+' +
                                                                     'e0_2*e0_3+' +
                                                                     'e0_2*e0_4_5*e0_4_6)'],
            ['e0[(e1[e2*e3]+e4[e5*e6])*(e7[e8*e9]+e10[e11*e12])]',  '(e0_1_2*e0_1_3*e0_7_8*e0_7_9+' +
                                                                     'e0_1_2*e0_1_3*e0_10_11*e0_10_12+' +
                                                                     'e0_4_5*e0_4_6*e0_7_8*e0_7_9+' +
                                                                     'e0_4_5*e0_4_6*e0_10_11*e0_10_12)'],
            ['e0[(e1+e2)*(e3+e4)*(e5+e6)]',                         '(e0_1*e0_3*e0_5+' +
                                                                     'e0_1*e0_3*e0_6+' +
                                                                     'e0_1*e0_4*e0_5+' +
                                                                     'e0_1*e0_4*e0_6+' +
                                                                     'e0_2*e0_3*e0_5+' +
                                                                     'e0_2*e0_3*e0_6+' +
                                                                     'e0_2*e0_4*e0_5+' +
                                                                     'e0_2*e0_4*e0_6)'],
            
            // square brackets between attributes
            
            ['e0[e1]e2',                                            '(e0_1_2)'],
            ['e0[e1][e2]',                                          '(e0_1_2)'],
            ['e0[e1][e2]e3',                                        '(e0_1_2_3)'],
            ['e0[e1][e2][e3]e4',                                    '(e0_1_2_3_4)'],
            ['e0[e1*e2]e3',                                         '(e0_1_3*e0_2_3)'],
            ['e0[e1*e2][e3*e4]',                                    '(e0_1_3*e0_1_4*e0_2_3*e0_2_4)'],
            ['e0[e1+e2][e3*e4]',                                    '(e0_1_3*e0_1_4+e0_2_3*e0_2_4)'],
            ['e0[e1*e2][e3+e4]',                                    '(e0_1_3*e0_2_3+e0_1_4*e0_2_4)'],
            ['e0[e1*e2+e3*e4][e5*e6]',                              '(e0_1_5*e0_1_6*e0_2_5*e0_2_6+' +
                                                                     'e0_3_5*e0_3_6*e0_4_5*e0_4_6)'],
            ['e0[e1*e2][e3*e4+e5*e6]e7',                            '(e0_1_3_7*e0_1_4_7*e0_2_3_7*e0_2_4_7+' +
                                                                     'e0_1_5_7*e0_1_6_7*e0_2_5_7*e0_2_6_7)'],
            ['e0[e1*e2][e3*e4+e5*e6]e7*e8',                         '(e0_1_3_7*e0_1_4_7*e0_2_3_7*e0_2_4_7+' +
                                                                     'e0_1_5_7*e0_1_6_7*e0_2_5_7*e0_2_6_7)*e8'],
            ['e0[e1*e2][e3*e4+e5*e6]e7+e8',                         '(e0_1_3_7*e0_1_4_7*e0_2_3_7*e0_2_4_7+' +
                                                                     'e0_1_5_7*e0_1_6_7*e0_2_5_7*e0_2_6_7)+e8']
        ],
        fails = [
            ['0[0=1]',              '0.0=1'],
            ['0_0.0_0[0_0=1]',      '0_0.0_0.0_0=1']
        ];

    function factory(term, res) {
        return function() {
            assert.equal(fn([term, {}])[0], res);  
        }
    }

    for (i=0, l=terms.length; i<l; i++) {
        it('should clear square brackets '+terms[i][0], factory(terms[i][0], terms[i][1]));
    }
});



